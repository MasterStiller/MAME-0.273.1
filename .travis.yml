language: cpp
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - g++-5
            - gcc-5
cache: ccache
compiler:
  - gcc
  - clang
os:
  - linux
matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      compiler: clang
env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
script:
  - if [ $TRAVIS_OS_NAME == 'linux' ]; then
    export;
    ccache -s;
    T_START=$(date -d "$TRAVIS_STACK_TIMESTAMP" +%s); T_NOW=$(date +%s);
    echo "Spinup $T_SPINUP, Estimated remaining $T_REMAINING, $T_START, $T_SPINUP" 1>&2;
    date;
    if [ $CC == 'clang' ]; then
    timeout 10m make -j2 IGNORE_GIT=1 OVERRIDE_CXX="clang++-3.6" OVERRIDE_CC="clang-3.6" || \
    case $? in
    124) echo "Build exceeded timelimit" 1>&2; exit 124 ;;
    0) ./$MAME -validate ;;
    *) exit $? ;;
    esac;
    else
    timeout 10m make -j4 IGNORE_GIT=1 OVERRIDE_CC="gcc-5" OVERRIDE_CXX="g++-5" TOOLS=1 || \
    case $? in
    124) echo "Build exceeded timelimit" 1>&2; exit 124 ;;
    0) ./$MAME -validate ;;
    *) exit $? ;;
    esac;
    fi
    elif [ $TRAVIS_OS_NAME == 'osx' ]; then
    unset LDOPTS && make -j2 OPTIMIZE=0 USE_LIBSDL=1 && ./$MAME -validate;
    fi;
    date;
sudo: required
before_install:
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then date; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo add-apt-repository ppa:zoogie/sdl2-snapshots -y; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo apt-get update -qq; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo apt-get install -y --force-yes libsdl2-dev libsdl2-ttf-dev libasound2-dev libxinerama-dev qt55base qt55quickcontrols qt55declarative qt55tools qt55svg; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then source /opt/qt55/bin/qt55-env.sh; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then brew update; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then brew install sdl2 sdl2_ttf; fi"
branches:
  only:
    - master
notifications:
  email: false

