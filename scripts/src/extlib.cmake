# license:BSD-3-Clause
# copyright-holders:MAMEdev Team

option(WITH_SYSTEM_EXPAT "Use system Expat library" OFF)
option(WITH_SYSTEM_ZLIB "Use system Zlib library" OFF)
option(WITH_SYSTEM_JPEG "Use system JPEG library" OFF)
option(WITH_SYSTEM_FLAC "Use system FLAC library" OFF)
option(WITH_SYSTEM_SQLITE3 "Use system SQLite library" OFF)
option(WITH_SYSTEM_PORTMIDI "Use system PortMidi library" OFF)
option(WITH_SYSTEM_PORTAUDIO "Use system PortAudio library" OFF)
option(WITH_SYSTEM_LUA "Use system LUA library" OFF)
option(WITH_SYSTEM_UTF8PROC "Use system utf8proc library" OFF)

option(WITH_SYSTEM_ASIO "Use system Asio library" OFF)
option(WITH_SYSTEM_GLM "Use system glm library" OFF)
option(WITH_SYSTEM_RAPIDJSON "Use system rapidjson library" OFF)
option(WITH_SYSTEM_PUGIXML "Use system pugixml library" OFF)

option(WITH_SYSTEM_SDL2 "Use system SDL2 library" ON)

if(NOT WITH_SYSTEM_EXPAT)
	set(EXT_LIB_EXPAT expat)
	set(EXT_INCLUDEDIR_EXPAT ${MAME_DIR}/3rdparty/expat/lib)
else()
	find_package(EXPAT REQUIRED)
	if(NOT EXPAT_FOUND)
		message(FATAL_ERROR "EXPAT not found")
	endif()
	set(EXT_LIB_EXPAT ${EXPAT_LIBRARIES})
	set(EXT_INCLUDEDIR_EXPAT ${EXPAT_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_ZLIB)
	set(EXT_LIB_ZLIB zlib)
	set(EXT_INCLUDEDIR_ZLIB ${MAME_DIR}/3rdparty/zlib)
else()
	find_package(ZLIB REQUIRED)
	if(NOT ZLIB_FOUND)
		message(FATAL_ERROR "ZLIB not found")
	endif()
	set(EXT_LIB_ZLIB ${ZLIB_LIBRARIES})
	set(EXT_INCLUDEDIR_ZLIB ${ZLIB_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_JPEG)
	set(EXT_LIB_JPEG jpeg)
	set(EXT_INCLUDEDIR_JPEG ${MAME_DIR}/3rdparty/libjpeg)
else()
	find_package(JPEG REQUIRED)
	if(NOT JPEG_FOUND)
		message(FATAL_ERROR "JPEG not found")
	endif()
	set(EXT_LIB_JPEG ${JPEG_LIBRARIES})
	set(EXT_INCLUDEDIR_JPEG ${JPEG_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_FLAC)
	set(EXT_LIB_FLAC flac)
	set(EXT_INCLUDEDIR_FLAC ${MAME_DIR}/3rdparty/libflac/include)
else()
	find_package(FLAC REQUIRED)
	if(NOT FLAC_FOUND)
		message(FATAL_ERROR "FLAC not found")
	endif()
	set(EXT_LIB_FLAC ${FLAC_LIBRARY})
	set(EXT_INCLUDEDIR_FLAC ${FLAC_INCLUDE_DIR})
endif()

if(NOT WITH_SYSTEM_LUA)
	set(EXT_LIB_LUA lua)
	set(EXT_INCLUDEDIR_LUA ${MAME_DIR}/3rdparty/lua/src)
else()
	find_package(Lua REQUIRED)
	if(NOT LUA_FOUND)
		message(FATAL_ERROR "Lua not found")
	endif()
	set(EXT_LIB_LUA ${LUA_LIBRARIES})
	set(EXT_INCLUDEDIR_LUA ${LUA_INCLUDE_DIR})
endif()

if(NOT WITH_SYSTEM_SQLITE3)
	set(EXT_LIB_SQLITE3 sqlite3)
	set(EXT_INCLUDEDIR_SQLITE3 ${MAME_DIR}/3rdparty/sqlite3)
else()
	find_package(SQLite3 REQUIRED)
	if(NOT SQLite3_FOUND)
		message(FATAL_ERROR "SQLite3 not found")
	endif()
	set(EXT_LIB_SQLITE3 ${SQLite3_LIBRARIES})
	set(EXT_INCLUDEDIR_SQLITE3 ${SQLite3_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_PORTMIDI)
	set(EXT_LIB_PORTMIDI portmidi)
	set(EXT_INCLUDEDIR_PORTMIDI ${MAME_DIR}/3rdparty/portmidi/pm_common)
else()
	find_package(PortMidi REQUIRED)
	if(NOT PortMidi_FOUND)
		message(FATAL_ERROR "PortMidi not found")
	endif()
	set(EXT_LIB_PORTMIDI ${PORTMIDI_LIBRARIES})
	set(EXT_INCLUDEDIR_PORTMIDI ${PORTMIDI_INCLUDE_DIR})
endif()

if(NOT WITH_SYSTEM_PORTAUDIO)
	set(EXT_LIB_PORTAUDIO portaudio)
	set(EXT_INCLUDEDIR_PORTAUDIO ${MAME_DIR}/3rdparty/portaudio/include)
else()
	find_package(portaudio REQUIRED)
	if(NOT PORTAUDIO_FOUND)
		message(FATAL_ERROR "portaudio not found")
	endif()
	set(EXT_LIB_PORTAUDIO ${PORTAUDIO_LIBRARIES})
	set(EXT_INCLUDEDIR_PORTAUDIO ${PORTAUDIO_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_UTF8PROC)
	set(EXT_LIB_UTF8PROC utf8proc)
	set(EXT_INCLUDEDIR_UTF8PROC ${MAME_DIR}/3rdparty/utf8proc)
else()
	find_package(Utf8Proc REQUIRED)
	if(NOT UTF8PROC_FOUND)
		message(FATAL_ERROR "Utf8Proc not found")
	endif()
	set(EXT_LIB_UTF8PROC ${UTF8PROC_LIBRARIES})
	set(EXT_INCLUDEDIR_UTF8PROC ${UTF8PROC_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_ASIO)
	set(EXT_INCLUDEDIR_ASIO ${MAME_DIR}/3rdparty/asio/include)
else()
	#TODO
endif()

if(NOT WITH_SYSTEM_GLM)
	set(EXT_INCLUDEDIR_GLM ${MAME_DIR}/3rdparty/glm)
else()
	find_package(GLM REQUIRED)
	if(NOT GLM_FOUND)
		message(FATAL_ERROR "GLM not found")
	endif()
	set(EXT_INCLUDEDIR_GLM ${GLM_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_RAPIDJSON)
	set(EXT_INCLUDEDIR_RAPIDJSON ${MAME_DIR}/3rdparty/rapidjson/include)
else()
	find_package(rapidjson REQUIRED)
	if(NOT RAPIDJSON_FOUND)
		message(FATAL_ERROR "rapidjson not found")
	endif()
	set(EXT_INCLUDEDIR_RAPIDJSON ${RAPIDJSON_INCLUDE_DIRS})
endif()

if(NOT WITH_SYSTEM_PUGIXML)
	set(EXT_INCLUDEDIR_PUGIXML ${MAME_DIR}/3rdparty/pugixml/src)
else()
	find_package(PugiXML REQUIRED)
	if(NOT PugiXML_FOUND)
		message(FATAL_ERROR "PugiXML not found")
	endif()
	set(EXT_INCLUDEDIR_PUGIXML ${PugiXML_INCLUDE_DIR})
	set(EXT_LIB_PUGIXML ${PugiXML_LIBRARIES})
endif()
